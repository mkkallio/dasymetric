% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/compute_weights.R
\name{compute_HSweights}
\alias{compute_HSweights}
\title{Computes weights \code{HSweights} from \code{HS} and a river network
  
The function computes weights either based on catchment areas (polygons), 
or line segments which intersect a polygon with runoff information. Weights 
are assigned so that the sum of weights for area or line features within a 
polygon equal to 1.}
\usage{
compute_HSweights(
  HS,
  river,
  basins = NULL,
  dasymetric = NULL,
  pycnophylactic = NULL,
  n = 20,
  intensive = TRUE,
  weights = NULL,
  aoi = NULL,
  riverID = "riverID",
  verbose = FALSE
)
}
\arguments{
\item{HS}{A 'HS' object, obtained with \code{\link{raster_to_HS}}.}

\item{river}{An 'sf' linestring feature representing a river network.}

\item{basins}{An 'sf' polygon object. If weights are set to "area", providing 
basins skips the delineation process. ID column must have the name as 
\code{riverID} See details. Optional. Defaults to \code{NULL}.}

\item{dasymetric}{Column name in \code{river} or in \code{basins} to be used 
as the ancillary information in dasymetric mapping. If \code{NULL} 
(default), no dasymetric mapping is performed. See details.}

\item{pycnophylactic}{Column in \code{HS} to be used as basis in 
pycnophylactic interpolation. If \code{NULL}, or if \code{is.null(basins)},
not performed. See details.}

\item{n}{Number of iterations when using pycnophylactic interpolation. 
Default \code{25}.}

\item{intensive}{Whether the pycnophylactic variable is intensive (density,
like runoff in mm), or not (in which case it is extensive, or counts like
runoff in volume).}

\item{weights}{Name of a column in \code{river} to be used directly as 
weights. Defaults to \code{NULL}. See Details.}

\item{aoi}{An area of interest ('sf' polygon object) used to intersect 
\code{river}. Ignored, if basins provided (in which case, aoi is the union
of \code{basins}). Defaults to \code{NULL}.}

\item{riverID}{A character string which specifies the name of the column in 
\code{river} containing unique river network identifiers. Defaults to 
\code{"riverID"}.}

\item{verbose}{Whether or not print progress indicators.}
}
\value{
Returns a list object with class 'HSweights', containing the following 
  elements:
  \itemize{
    \item \code{river}. The supplied river network with routing information. 
      See \code{\link{river_network}} for details.
    \item \code{weights}. River network lines or catchment polygon network 
      which was used as the basis of weighting. See 
      \code{\link{compute_area_weights}} or \code{\link{compute_river_weights}} 
      for details.
    \item \code{HS}. The input HS object containing runoff information. 
}
}
\description{
The river network needs to be a "clean", connected network. This means that 
connected river segments share a node at the point of confluence, and all 
linestrings are cut at segment intersections.
}
\details{
Weights should be one of the following: "equal", "length", "strahler", "area", 
or a numeric vector which specifies the weight for each river segment. 
\itemize{
  \item \code{equal} option assigns equal weights to all river segments within 
  a polygon.
  \item \code{length} option weights river segments within a polygon based on 
  the length of the segment.
  \item \code{strahler} option weights river segments based on the Strahler 
  number computed for the 
  supplied river network.
  \item A numeric vector with length equal to the number of features in
   \code{river}. Weights will be computed within a polygon: \eqn{x_i/sum(x)}
  \item \code{area} option weights the river segments based on segment-specific 
  catchment area falling inside a polygon. See more details below.
}

If line-based weights (equal, length, strahler, user specified vector) are 
used, the river network is split at grid cell boundaries before determining 
polygon-segment relationship.

"area" weights can be used when catchment-based weighting is desired. If no 
further data is supplied, the function computes a Voronoi diagram from the 
river network (see \code{\link{river_voronoi}} for details). If the basins 
are known, they can be supplied which allows skipping the delineation step 
entirely.
}
